



/*Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

 

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.*/

================================

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        //sorting and use two pointer concept
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int a_pointer=0;
        int b_pointer=0;
        HashSet<Integer> hs=new HashSet<>();
        while(a_pointer<nums1.length && b_pointer<nums2.length){
            int val1=nums1[a_pointer];
            int val2=nums2[b_pointer];
            if(val1>val2){
                b_pointer++;
            }else if(val2>val1){
                a_pointer++;
            }
            else{
                hs.add(val1);
                a_pointer++;
                b_pointer++;
            }
        }
        //printing of hashset
        int[] res=new int[hs.size()];
        int p=0;
        for(int i:hs){
            res[p++]=i;
        }
        return res;
    }
}
