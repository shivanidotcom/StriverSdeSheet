class Solution {
    public int[][] merge(int[][] intervals) {
        ArrayList<ArrayList<Integer>> al = new ArrayList<>();
        for(int i=0;i<intervals.length;i++){
            ArrayList<Integer> b = new ArrayList<>();
            for(int j=0;j<intervals[i].length;j++){
                b.add(intervals[i][j]);
            }
            al.add(b);
        }
        System.out.println(al);
        Collections.sort(al,(a,b)->a.get(0)-b.get(0));
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        for(int i=0;i<al.size();i++){
            // end < start
            if(result.isEmpty() || result.get(result.size()-1).get(1)<al.get(i).get(0)){
                ArrayList<Integer> a = new ArrayList<>();
                a.add(al.get(i).get(0));
                a.add(al.get(i).get(1));
                result.add(a);
            }else{
                // false condition
                result.get(result.size()-1).set(1,Math.max(result.get(result.size()-1).get(1),al.get(i).get(1)));
            }
        }
        int[][] res = new int[result.size()][result.get(0).size()];
        for(int i=0;i<result.size();i++){
            for(int j=0;j<result.get(i).size();j++){
                res[i][j]=result.get(i).get(j);
            }
        }
        return res;
       
    }
}
