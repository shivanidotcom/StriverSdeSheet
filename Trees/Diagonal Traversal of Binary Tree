Given a Binary Tree, print the diagonal traversal of the binary tree.

Consider lines of slope -1 passing between nodes. Given a Binary Tree, print all diagonal elements in a binary tree belonging to same line.
If the diagonal element are present in two different subtress then left subtree diagonal element should be taken first and then right subtree. 

Example 1:

Input :
            8
         /     \
        3      10
      /   \      \
     1     6     14
         /   \   /
        4     7 13
Output : 8 10 14 3 6 7 13 1 4
Explanation:
unnamed
Diagonal Traversal of binary tree : 
 8 10 14 3 6 7 13 1 4
 
 
 =================================================
 
 class Tree
{
     public ArrayList<Integer> diagonal(Node root)
      {
           //add your code here.
           ArrayList<Integer> res=new ArrayList<>();
           if(root==null) return res;
           Queue<Node> q=new LinkedList<>();
           q.add(root);
           while(q.isEmpty()==false){
               Node curr=q.poll();
               while(curr!=null){
                   if(curr.left!=null)
                      q.add(curr.left);
                   res.add(curr.data);
                   curr=curr.right;
               }
               
           }
           return res;
      }
}
//time complexity = O(N)
//space complexity = O(N) bcoz we are using queue ds
