Given the root of a binary tree, invert the tree, and return its root.

 

Example 1:


Input: root = [4,2,7,1,3,6,9]
Output: [4,7,2,9,6,3,1]
Example 2:


Input: root = [2,1,3]
Output: [2,3,1]
Example 3:

Input: root = []
Output: []

============================
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode construct(TreeNode root){
        if(root==null) return null;
        TreeNode curr=new TreeNode(root.val);
        curr.left=construct(root.right);
        curr.right=construct(root.left);
        return curr;
    }
    public TreeNode invertTree(TreeNode root) {
        if(root==null){
            return null;
        }
        return construct(root);
    }
}
