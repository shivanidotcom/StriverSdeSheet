class Node{
    int data;
    Node next;
   
    Node(int x){
        data=x;
        next=null;
       
    }
}
public class Main
{
    /**Naiive approach**/
    public static void middleList(Node head){
        if(head==null) return ;
        int count=0;
        for(Node curr=head;curr!=null;curr=curr.next){
            count++;
        }
        Node curr=head;
        for(int i=0;i<count/2;i++){
            curr=curr.next;
        }
        System.out.println(curr.data);
    }
    /** efficient solution **/
    public static void middleEff(Node head){
        if(head==null) return ;
        Node fast=head;
        Node slow=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        System.out.println(slow.data);
    }
    public static void display(Node head){
        Node temp=head;
        while(temp!=null){
            System.out.print(temp.data+" ");
            temp=temp.next;
        }
       
    }
	public static void main(String[] args) {
	   Node head=new Node(10);
	   Node temp1=new Node(20);
	   Node temp2=new Node(30);
	   head.next=temp1;
	   temp1.next=temp2;
       display(head);
	   System.out.println();
	   middleList(head);
	   middleEff(head);
	 
	}
}

