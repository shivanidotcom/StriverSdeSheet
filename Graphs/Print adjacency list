Given the adjacency list of a bidirectional graph. Your task is to copy/clone the adjacency list for each vertex and return a new list.


Example 1:

Input:

Output: 
0-> 1-> 4 
1-> 0-> 2-> 3-> 4 
2-> 1-> 3 
3-> 1-> 2-> 4 
4-> 0-> 1-> 3
Explanation:
As 0,1 and 3 is connected to 4 so 4th row
of the list containing 4 and its connected
nodes 0,1 and 3 and we have to add those in
sorted order and same for every row.


==============================================================

class Solution {
    // Function to return the adjacency list for each vertex.
    public ArrayList<ArrayList<Integer>> printGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<ArrayList<Integer>> res=new ArrayList<>();
        for(int i=0;i<adj.size();i++){
            ArrayList<Integer> al=new ArrayList<>();
             al.add(i);
            for(int j=0;j<adj.get(i).size();j++){
               // System.out.println(adj.get(i).get(j));
                al.add(adj.get(i).get(j));
            }
            res.add(al);
        }
        return res;
    }
    
}
